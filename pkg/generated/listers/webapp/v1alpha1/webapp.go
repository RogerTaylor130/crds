/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "crds/pkg/apis/webapp/v1alpha1"

	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// WebappLister helps list Webapps.
// All objects returned here must be treated as read-only.
type WebappLister interface {
	// List lists all Webapps in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Webapp, err error)
	// Webapps returns an object that can list and get Webapps.
	Webapps(namespace string) WebappNamespaceLister
	WebappListerExpansion
}

// webappLister implements the WebappLister interface.
type webappLister struct {
	listers.ResourceIndexer[*v1alpha1.Webapp]
}

// NewWebappLister returns a new WebappLister.
func NewWebappLister(indexer cache.Indexer) WebappLister {
	return &webappLister{listers.New[*v1alpha1.Webapp](indexer, v1alpha1.Resource("webapp"))}
}

// Webapps returns an object that can list and get Webapps.
func (s *webappLister) Webapps(namespace string) WebappNamespaceLister {
	return webappNamespaceLister{listers.NewNamespaced[*v1alpha1.Webapp](s.ResourceIndexer, namespace)}
}

// WebappNamespaceLister helps list and get Webapps.
// All objects returned here must be treated as read-only.
type WebappNamespaceLister interface {
	// List lists all Webapps in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Webapp, err error)
	// Get retrieves the Webapp from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Webapp, error)
	WebappNamespaceListerExpansion
}

// webappNamespaceLister implements the WebappNamespaceLister
// interface.
type webappNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.Webapp]
}
