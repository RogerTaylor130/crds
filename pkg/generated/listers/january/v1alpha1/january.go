/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "crds/pkg/apis/january/v1alpha1"

	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// JanuaryLister helps list Januaries.
// All objects returned here must be treated as read-only.
type JanuaryLister interface {
	// List lists all Januaries in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.January, err error)
	// Januaries returns an object that can list and get Januaries.
	Januaries(namespace string) JanuaryNamespaceLister
	JanuaryListerExpansion
}

// januaryLister implements the JanuaryLister interface.
type januaryLister struct {
	listers.ResourceIndexer[*v1alpha1.January]
}

// NewJanuaryLister returns a new JanuaryLister.
func NewJanuaryLister(indexer cache.Indexer) JanuaryLister {
	return &januaryLister{listers.New[*v1alpha1.January](indexer, v1alpha1.Resource("january"))}
}

// Januaries returns an object that can list and get Januaries.
func (s *januaryLister) Januaries(namespace string) JanuaryNamespaceLister {
	return januaryNamespaceLister{listers.NewNamespaced[*v1alpha1.January](s.ResourceIndexer, namespace)}
}

// JanuaryNamespaceLister helps list and get Januaries.
// All objects returned here must be treated as read-only.
type JanuaryNamespaceLister interface {
	// List lists all Januaries in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.January, err error)
	// Get retrieves the January from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.January, error)
	JanuaryNamespaceListerExpansion
}

// januaryNamespaceLister implements the JanuaryNamespaceLister
// interface.
type januaryNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.January]
}
